# Generated by Django 5.1.6 on 2025-04-25 11:47

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cities", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Restaurant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название ресторана"),
                ),
                (
                    "iiko_organization_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID организации из iiko Cloud API",
                    ),
                ),
                (
                    "external_menu_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Внешний ID меню из iiko Cloud API",
                    ),
                ),
                (
                    "price_category_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID ценной категории из iiko Cloud API",
                    ),
                ),
                (
                    "department_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID подразделения из iiko Waiter",
                    ),
                ),
                (
                    "opening_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Время открытия"
                    ),
                ),
                (
                    "closing_time",
                    models.TimeField(
                        blank=True, null=True, verbose_name="Время закрытия"
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restaurants",
                        to="cities.city",
                        verbose_name="Город",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ресторан",
                "verbose_name_plural": "Ресторан",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название секции"),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sections",
                        to="restaurant.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
            ],
            options={
                "verbose_name": "Секция",
                "verbose_name_plural": "Секции",
            },
        ),
        migrations.CreateModel(
            name="Table",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Уникальный UUID",
                    ),
                ),
                (
                    "iiko_uuid",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="UUID стола в iiko",
                    ),
                ),
                ("number", models.IntegerField(verbose_name="Номер стола")),
                (
                    "qr",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="qr_codes/",
                        verbose_name="QR-код",
                    ),
                ),
                (
                    "call_waiter",
                    models.BooleanField(default=False, verbose_name="Вызов официанта"),
                ),
                (
                    "call_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время вызова"
                    ),
                ),
                (
                    "bill_waiter",
                    models.BooleanField(default=False, verbose_name="Запрос счёта"),
                ),
                (
                    "bill_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Время запроса счёта"
                    ),
                ),
                (
                    "iiko_waiter_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID официанта в iiko",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tables",
                        to="restaurant.section",
                        verbose_name="Секция",
                    ),
                ),
            ],
            options={
                "verbose_name": "Стол и его QR код",
                "verbose_name_plural": "Создание столов и QR кодов",
                "ordering": ["number"],
            },
        ),
        migrations.AddIndex(
            model_name="restaurant",
            index=models.Index(fields=["name"], name="restaurant__name_cf5999_idx"),
        ),
        migrations.AddIndex(
            model_name="section",
            index=models.Index(
                fields=["restaurant", "name"], name="restaurant__restaur_7d43bc_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="section",
            unique_together={("restaurant", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="table",
            unique_together={("section", "number")},
        ),
    ]
