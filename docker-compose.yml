version: '3.9'

services:
  web:
    build: .
    restart: always
    volumes:
      - .:/usr/src/app
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=core.settings
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - USE_DO_SPACES=${USE_DO_SPACES}
      - DO_SPACES_KEY=${DO_SPACES_KEY}
      - DO_SPACES_SECRET=${DO_SPACES_SECRET}
      - DO_SPACES_BUCKET=${DO_SPACES_BUCKET}
      - DO_SPACES_REGION=${DO_SPACES_REGION}
      - DO_SPACES_ENDPOINT=${DO_SPACES_ENDPOINT}
    command: bash /usr/src/app/entrypoint.sh
    networks:
      - app_network

  migration:
    build: .
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL...' &&
        sleep 5 &&
        python manage.py migrate"
    volumes:
      - .:/usr/src/app
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=core.settings
      - USE_DO_SPACES=${USE_DO_SPACES}
      - DO_SPACES_KEY=${DO_SPACES_KEY}
      - DO_SPACES_SECRET=${DO_SPACES_SECRET}
      - DO_SPACES_BUCKET=${DO_SPACES_BUCKET}
      - DO_SPACES_REGION=${DO_SPACES_REGION}
      - DO_SPACES_ENDPOINT=${DO_SPACES_ENDPOINT}
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  static_volume:
  media_volume: