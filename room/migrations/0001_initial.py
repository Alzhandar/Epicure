# Generated by Django 5.1.7 on 2025-04-30 06:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
        ("restaurant", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reservation_date",
                    models.DateField(verbose_name="Дата бронирования"),
                ),
                ("start_time", models.TimeField(verbose_name="Время начала")),
                ("end_time", models.TimeField(verbose_name="Время окончания")),
                (
                    "guest_count",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(20),
                        ],
                        verbose_name="Количество гостей",
                    ),
                ),
                (
                    "guest_name",
                    models.CharField(max_length=255, verbose_name="Имя клиента"),
                ),
                (
                    "guest_phone",
                    models.CharField(max_length=20, verbose_name="Телефон клиента"),
                ),
                (
                    "guest_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email клиента",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает подтверждения"),
                            ("confirmed", "Подтверждено"),
                            ("cancelled", "Отменено"),
                            ("completed", "Завершено"),
                            ("no_show", "Неявка"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус бронирования",
                    ),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True, null=True, verbose_name="Особые пожелания"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="restaurant.restaurant",
                        verbose_name="Ресторан",
                    ),
                ),
                (
                    "table",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="restaurant.table",
                        verbose_name="Стол",
                    ),
                ),
            ],
            options={
                "verbose_name": "Бронирование",
                "verbose_name_plural": "Бронирования",
                "ordering": ["-reservation_date", "-start_time"],
            },
        ),
        migrations.CreateModel(
            name="ReservationMenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "menu_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservation_items",
                        to="products.menu",
                        verbose_name="Блюдо",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="menu_items",
                        to="room.reservation",
                        verbose_name="Бронирование",
                    ),
                ),
            ],
            options={
                "verbose_name": "Блюдо для бронирования",
                "verbose_name_plural": "Блюда для бронирования",
            },
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["reservation_date", "start_time"],
                name="room_reserv_reserva_0edb94_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(fields=["status"], name="room_reserv_status_3b60cd_idx"),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["table", "reservation_date"],
                name="room_reserv_table_i_845e26_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="reservationmenuitem",
            unique_together={("reservation", "menu_item")},
        ),
    ]
